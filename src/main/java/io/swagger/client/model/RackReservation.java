/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NestedRack;
import io.swagger.client.model.NestedTenant;
import io.swagger.client.model.NestedUser;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * RackReservation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class RackReservation {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("rack")
  private NestedRack rack = null;

  @SerializedName("units")
  private List<Integer> units = new ArrayList<Integer>();

  @SerializedName("created")
  private LocalDate created = null;

  @SerializedName("user")
  private NestedUser user = null;

  @SerializedName("tenant")
  private NestedTenant tenant = null;

  @SerializedName("description")
  private String description = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public RackReservation rack(NestedRack rack) {
    this.rack = rack;
    return this;
  }

  

  /**
  * Get rack
  * @return rack
  **/
  @Schema(required = true, description = "")
  public NestedRack getRack() {
    return rack;
  }
  public void setRack(NestedRack rack) {
    this.rack = rack;
  }
  public RackReservation units(List<Integer> units) {
    this.units = units;
    return this;
  }

  public RackReservation addUnitsItem(Integer unitsItem) {
    this.units.add(unitsItem);
    return this;
  }

  /**
  * Get units
  * @return units
  **/
  @Schema(required = true, description = "")
  public List<Integer> getUnits() {
    return units;
  }
  public void setUnits(List<Integer> units) {
    this.units = units;
  }
  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public LocalDate getCreated() {
    return created;
  }
  public RackReservation user(NestedUser user) {
    this.user = user;
    return this;
  }

  

  /**
  * Get user
  * @return user
  **/
  @Schema(required = true, description = "")
  public NestedUser getUser() {
    return user;
  }
  public void setUser(NestedUser user) {
    this.user = user;
  }
  public RackReservation tenant(NestedTenant tenant) {
    this.tenant = tenant;
    return this;
  }

  

  /**
  * Get tenant
  * @return tenant
  **/
  @Schema(description = "")
  public NestedTenant getTenant() {
    return tenant;
  }
  public void setTenant(NestedTenant tenant) {
    this.tenant = tenant;
  }
  public RackReservation description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(required = true, description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RackReservation rackReservation = (RackReservation) o;
    return Objects.equals(this.id, rackReservation.id) &&
        Objects.equals(this.rack, rackReservation.rack) &&
        Objects.equals(this.units, rackReservation.units) &&
        Objects.equals(this.created, rackReservation.created) &&
        Objects.equals(this.user, rackReservation.user) &&
        Objects.equals(this.tenant, rackReservation.tenant) &&
        Objects.equals(this.description, rackReservation.description);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, rack, units, created, user, tenant, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RackReservation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rack: ").append(toIndentedString(rack)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
