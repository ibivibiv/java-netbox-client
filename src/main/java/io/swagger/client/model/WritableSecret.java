/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * WritableSecret
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class WritableSecret {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("device")
  private Integer device = null;

  @SerializedName("role")
  private Integer role = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("plaintext")
  private String plaintext = null;

  @SerializedName("hash")
  private String hash = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("custom_fields")
  private Object customFields = null;

  @SerializedName("created")
  private LocalDate created = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public WritableSecret device(Integer device) {
    this.device = device;
    return this;
  }

  

  /**
  * Get device
  * @return device
  **/
  @Schema(required = true, description = "")
  public Integer getDevice() {
    return device;
  }
  public void setDevice(Integer device) {
    this.device = device;
  }
  public WritableSecret role(Integer role) {
    this.role = role;
    return this;
  }

  

  /**
  * Get role
  * @return role
  **/
  @Schema(required = true, description = "")
  public Integer getRole() {
    return role;
  }
  public void setRole(Integer role) {
    this.role = role;
  }
  public WritableSecret name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public WritableSecret plaintext(String plaintext) {
    this.plaintext = plaintext;
    return this;
  }

  

  /**
  * Get plaintext
  * @return plaintext
  **/
  @Schema(required = true, description = "")
  public String getPlaintext() {
    return plaintext;
  }
  public void setPlaintext(String plaintext) {
    this.plaintext = plaintext;
  }
  /**
  * Get hash
  * @return hash
  **/
  @Schema(description = "")
  public String getHash() {
    return hash;
  }
  public WritableSecret tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public WritableSecret addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  public WritableSecret customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  

  /**
  * Get customFields
  * @return customFields
  **/
  @Schema(description = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }
  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public LocalDate getCreated() {
    return created;
  }
  /**
  * Get lastUpdated
  * @return lastUpdated
  **/
  @Schema(description = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritableSecret writableSecret = (WritableSecret) o;
    return Objects.equals(this.id, writableSecret.id) &&
        Objects.equals(this.device, writableSecret.device) &&
        Objects.equals(this.role, writableSecret.role) &&
        Objects.equals(this.name, writableSecret.name) &&
        Objects.equals(this.plaintext, writableSecret.plaintext) &&
        Objects.equals(this.hash, writableSecret.hash) &&
        Objects.equals(this.tags, writableSecret.tags) &&
        Objects.equals(this.customFields, writableSecret.customFields) &&
        Objects.equals(this.created, writableSecret.created) &&
        Objects.equals(this.lastUpdated, writableSecret.lastUpdated);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, device, role, name, plaintext, hash, tags, customFields, created, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritableSecret {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    plaintext: ").append(toIndentedString(plaintext)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
