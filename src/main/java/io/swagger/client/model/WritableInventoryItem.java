/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * WritableInventoryItem
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class WritableInventoryItem {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("device")
  private Integer device = null;

  @SerializedName("parent")
  private Integer parent = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("manufacturer")
  private Integer manufacturer = null;

  @SerializedName("part_id")
  private String partId = null;

  @SerializedName("serial")
  private String serial = null;

  @SerializedName("asset_tag")
  private String assetTag = null;

  @SerializedName("discovered")
  private Boolean discovered = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("tags")
  private List<String> tags = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public WritableInventoryItem device(Integer device) {
    this.device = device;
    return this;
  }

  

  /**
  * Get device
  * @return device
  **/
  @Schema(required = true, description = "")
  public Integer getDevice() {
    return device;
  }
  public void setDevice(Integer device) {
    this.device = device;
  }
  public WritableInventoryItem parent(Integer parent) {
    this.parent = parent;
    return this;
  }

  

  /**
  * Get parent
  * @return parent
  **/
  @Schema(description = "")
  public Integer getParent() {
    return parent;
  }
  public void setParent(Integer parent) {
    this.parent = parent;
  }
  public WritableInventoryItem name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public WritableInventoryItem manufacturer(Integer manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  

  /**
  * Get manufacturer
  * @return manufacturer
  **/
  @Schema(description = "")
  public Integer getManufacturer() {
    return manufacturer;
  }
  public void setManufacturer(Integer manufacturer) {
    this.manufacturer = manufacturer;
  }
  public WritableInventoryItem partId(String partId) {
    this.partId = partId;
    return this;
  }

  

  /**
  * Get partId
  * @return partId
  **/
  @Schema(description = "")
  public String getPartId() {
    return partId;
  }
  public void setPartId(String partId) {
    this.partId = partId;
  }
  public WritableInventoryItem serial(String serial) {
    this.serial = serial;
    return this;
  }

  

  /**
  * Get serial
  * @return serial
  **/
  @Schema(description = "")
  public String getSerial() {
    return serial;
  }
  public void setSerial(String serial) {
    this.serial = serial;
  }
  public WritableInventoryItem assetTag(String assetTag) {
    this.assetTag = assetTag;
    return this;
  }

  

  /**
  * A unique tag used to identify this item
  * @return assetTag
  **/
  @Schema(description = "A unique tag used to identify this item")
  public String getAssetTag() {
    return assetTag;
  }
  public void setAssetTag(String assetTag) {
    this.assetTag = assetTag;
  }
  public WritableInventoryItem discovered(Boolean discovered) {
    this.discovered = discovered;
    return this;
  }

  

  /**
  * Get discovered
  * @return discovered
  **/
  @Schema(description = "")
  public Boolean isDiscovered() {
    return discovered;
  }
  public void setDiscovered(Boolean discovered) {
    this.discovered = discovered;
  }
  public WritableInventoryItem description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public WritableInventoryItem tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public WritableInventoryItem addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritableInventoryItem writableInventoryItem = (WritableInventoryItem) o;
    return Objects.equals(this.id, writableInventoryItem.id) &&
        Objects.equals(this.device, writableInventoryItem.device) &&
        Objects.equals(this.parent, writableInventoryItem.parent) &&
        Objects.equals(this.name, writableInventoryItem.name) &&
        Objects.equals(this.manufacturer, writableInventoryItem.manufacturer) &&
        Objects.equals(this.partId, writableInventoryItem.partId) &&
        Objects.equals(this.serial, writableInventoryItem.serial) &&
        Objects.equals(this.assetTag, writableInventoryItem.assetTag) &&
        Objects.equals(this.discovered, writableInventoryItem.discovered) &&
        Objects.equals(this.description, writableInventoryItem.description) &&
        Objects.equals(this.tags, writableInventoryItem.tags);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, device, parent, name, manufacturer, partId, serial, assetTag, discovered, description, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritableInventoryItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    partId: ").append(toIndentedString(partId)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    assetTag: ").append(toIndentedString(assetTag)).append("\n");
    sb.append("    discovered: ").append(toIndentedString(discovered)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
