/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NestedDeviceRole;
import io.swagger.client.model.NestedPlatform;
import io.swagger.client.model.NestedRegion;
import io.swagger.client.model.NestedSite;
import io.swagger.client.model.NestedTenant;
import io.swagger.client.model.NestedTenantGroup;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConfigContext
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class ConfigContext {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("weight")
  private Integer weight = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("regions")
  private List<NestedRegion> regions = null;

  @SerializedName("sites")
  private List<NestedSite> sites = null;

  @SerializedName("roles")
  private List<NestedDeviceRole> roles = null;

  @SerializedName("platforms")
  private List<NestedPlatform> platforms = null;

  @SerializedName("tenant_groups")
  private List<NestedTenantGroup> tenantGroups = null;

  @SerializedName("tenants")
  private List<NestedTenant> tenants = null;

  @SerializedName("data")
  private String data = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public ConfigContext name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ConfigContext weight(Integer weight) {
    this.weight = weight;
    return this;
  }

  

  /**
  * Get weight
  * minimum: 0
  * maximum: 32767
  * @return weight
  **/
  @Schema(description = "")
  public Integer getWeight() {
    return weight;
  }
  public void setWeight(Integer weight) {
    this.weight = weight;
  }
  public ConfigContext description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public ConfigContext isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  

  /**
  * Get isActive
  * @return isActive
  **/
  @Schema(description = "")
  public Boolean isIsActive() {
    return isActive;
  }
  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }
  public ConfigContext regions(List<NestedRegion> regions) {
    this.regions = regions;
    return this;
  }

  public ConfigContext addRegionsItem(NestedRegion regionsItem) {
    if (this.regions == null) {
      this.regions = new ArrayList<NestedRegion>();
    }
    this.regions.add(regionsItem);
    return this;
  }

  /**
  * Get regions
  * @return regions
  **/
  @Schema(description = "")
  public List<NestedRegion> getRegions() {
    return regions;
  }
  public void setRegions(List<NestedRegion> regions) {
    this.regions = regions;
  }
  public ConfigContext sites(List<NestedSite> sites) {
    this.sites = sites;
    return this;
  }

  public ConfigContext addSitesItem(NestedSite sitesItem) {
    if (this.sites == null) {
      this.sites = new ArrayList<NestedSite>();
    }
    this.sites.add(sitesItem);
    return this;
  }

  /**
  * Get sites
  * @return sites
  **/
  @Schema(description = "")
  public List<NestedSite> getSites() {
    return sites;
  }
  public void setSites(List<NestedSite> sites) {
    this.sites = sites;
  }
  public ConfigContext roles(List<NestedDeviceRole> roles) {
    this.roles = roles;
    return this;
  }

  public ConfigContext addRolesItem(NestedDeviceRole rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<NestedDeviceRole>();
    }
    this.roles.add(rolesItem);
    return this;
  }

  /**
  * Get roles
  * @return roles
  **/
  @Schema(description = "")
  public List<NestedDeviceRole> getRoles() {
    return roles;
  }
  public void setRoles(List<NestedDeviceRole> roles) {
    this.roles = roles;
  }
  public ConfigContext platforms(List<NestedPlatform> platforms) {
    this.platforms = platforms;
    return this;
  }

  public ConfigContext addPlatformsItem(NestedPlatform platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<NestedPlatform>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

  /**
  * Get platforms
  * @return platforms
  **/
  @Schema(description = "")
  public List<NestedPlatform> getPlatforms() {
    return platforms;
  }
  public void setPlatforms(List<NestedPlatform> platforms) {
    this.platforms = platforms;
  }
  public ConfigContext tenantGroups(List<NestedTenantGroup> tenantGroups) {
    this.tenantGroups = tenantGroups;
    return this;
  }

  public ConfigContext addTenantGroupsItem(NestedTenantGroup tenantGroupsItem) {
    if (this.tenantGroups == null) {
      this.tenantGroups = new ArrayList<NestedTenantGroup>();
    }
    this.tenantGroups.add(tenantGroupsItem);
    return this;
  }

  /**
  * Get tenantGroups
  * @return tenantGroups
  **/
  @Schema(description = "")
  public List<NestedTenantGroup> getTenantGroups() {
    return tenantGroups;
  }
  public void setTenantGroups(List<NestedTenantGroup> tenantGroups) {
    this.tenantGroups = tenantGroups;
  }
  public ConfigContext tenants(List<NestedTenant> tenants) {
    this.tenants = tenants;
    return this;
  }

  public ConfigContext addTenantsItem(NestedTenant tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<NestedTenant>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

  /**
  * Get tenants
  * @return tenants
  **/
  @Schema(description = "")
  public List<NestedTenant> getTenants() {
    return tenants;
  }
  public void setTenants(List<NestedTenant> tenants) {
    this.tenants = tenants;
  }
  public ConfigContext data(String data) {
    this.data = data;
    return this;
  }

  

  /**
  * Get data
  * @return data
  **/
  @Schema(required = true, description = "")
  public String getData() {
    return data;
  }
  public void setData(String data) {
    this.data = data;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigContext configContext = (ConfigContext) o;
    return Objects.equals(this.id, configContext.id) &&
        Objects.equals(this.name, configContext.name) &&
        Objects.equals(this.weight, configContext.weight) &&
        Objects.equals(this.description, configContext.description) &&
        Objects.equals(this.isActive, configContext.isActive) &&
        Objects.equals(this.regions, configContext.regions) &&
        Objects.equals(this.sites, configContext.sites) &&
        Objects.equals(this.roles, configContext.roles) &&
        Objects.equals(this.platforms, configContext.platforms) &&
        Objects.equals(this.tenantGroups, configContext.tenantGroups) &&
        Objects.equals(this.tenants, configContext.tenants) &&
        Objects.equals(this.data, configContext.data);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, weight, description, isActive, regions, sites, roles, platforms, tenantGroups, tenants, data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigContext {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    sites: ").append(toIndentedString(sites)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    tenantGroups: ").append(toIndentedString(tenantGroups)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
