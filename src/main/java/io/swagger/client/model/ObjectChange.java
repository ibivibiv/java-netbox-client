/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NestedUser;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * ObjectChange
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class ObjectChange {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("time")
  private OffsetDateTime time = null;

  @SerializedName("user")
  private NestedUser user = null;

  @SerializedName("user_name")
  private String userName = null;

  @SerializedName("request_id")
  private UUID requestId = null;

  @SerializedName("action")
  private Integer action = null;

  @SerializedName("content_type")
  private String contentType = null;

  @SerializedName("changed_object")
  private String changedObject = null;

  @SerializedName("object_data")
  private String objectData = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  /**
  * Get time
  * @return time
  **/
  @Schema(description = "")
  public OffsetDateTime getTime() {
    return time;
  }
  public ObjectChange user(NestedUser user) {
    this.user = user;
    return this;
  }

  

  /**
  * Get user
  * @return user
  **/
  @Schema(description = "")
  public NestedUser getUser() {
    return user;
  }
  public void setUser(NestedUser user) {
    this.user = user;
  }
  /**
  * Get userName
  * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }
  /**
  * Get requestId
  * @return requestId
  **/
  @Schema(description = "")
  public UUID getRequestId() {
    return requestId;
  }
  public ObjectChange action(Integer action) {
    this.action = action;
    return this;
  }

  

  /**
  * Get action
  * @return action
  **/
  @Schema(required = true, description = "")
  public Integer getAction() {
    return action;
  }
  public void setAction(Integer action) {
    this.action = action;
  }
  /**
  * Get contentType
  * @return contentType
  **/
  @Schema(description = "")
  public String getContentType() {
    return contentType;
  }
  /**
  * Get changedObject
  * @return changedObject
  **/
  @Schema(description = "")
  public String getChangedObject() {
    return changedObject;
  }
  /**
  * Get objectData
  * @return objectData
  **/
  @Schema(description = "")
  public String getObjectData() {
    return objectData;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectChange objectChange = (ObjectChange) o;
    return Objects.equals(this.id, objectChange.id) &&
        Objects.equals(this.time, objectChange.time) &&
        Objects.equals(this.user, objectChange.user) &&
        Objects.equals(this.userName, objectChange.userName) &&
        Objects.equals(this.requestId, objectChange.requestId) &&
        Objects.equals(this.action, objectChange.action) &&
        Objects.equals(this.contentType, objectChange.contentType) &&
        Objects.equals(this.changedObject, objectChange.changedObject) &&
        Objects.equals(this.objectData, objectChange.objectData);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, time, user, userName, requestId, action, contentType, changedObject, objectData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectChange {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    changedObject: ").append(toIndentedString(changedObject)).append("\n");
    sb.append("    objectData: ").append(toIndentedString(objectData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
