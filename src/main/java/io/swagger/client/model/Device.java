/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NestedCluster;
import io.swagger.client.model.NestedDeviceRole;
import io.swagger.client.model.NestedDeviceType;
import io.swagger.client.model.NestedIPAddress;
import io.swagger.client.model.NestedPlatform;
import io.swagger.client.model.NestedRack;
import io.swagger.client.model.NestedSite;
import io.swagger.client.model.NestedTenant;
import io.swagger.client.model.NestedVirtualChassis;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * Device
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class Device {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("device_type")
  private NestedDeviceType deviceType = null;

  @SerializedName("device_role")
  private NestedDeviceRole deviceRole = null;

  @SerializedName("tenant")
  private NestedTenant tenant = null;

  @SerializedName("platform")
  private NestedPlatform platform = null;

  @SerializedName("serial")
  private String serial = null;

  @SerializedName("asset_tag")
  private String assetTag = null;

  @SerializedName("site")
  private NestedSite site = null;

  @SerializedName("rack")
  private NestedRack rack = null;

  @SerializedName("position")
  private Integer position = null;

  @SerializedName("face")
  private Object face = null;

  @SerializedName("parent_device")
  private String parentDevice = null;

  @SerializedName("status")
  private Object status = null;

  @SerializedName("primary_ip")
  private NestedIPAddress primaryIp = null;

  @SerializedName("primary_ip4")
  private NestedIPAddress primaryIp4 = null;

  @SerializedName("primary_ip6")
  private NestedIPAddress primaryIp6 = null;

  @SerializedName("cluster")
  private NestedCluster cluster = null;

  @SerializedName("virtual_chassis")
  private NestedVirtualChassis virtualChassis = null;

  @SerializedName("vc_position")
  private Integer vcPosition = null;

  @SerializedName("vc_priority")
  private Integer vcPriority = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("local_context_data")
  private String localContextData = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("custom_fields")
  private Object customFields = null;

  @SerializedName("created")
  private LocalDate created = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public Device name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  /**
  * Get displayName
  * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }
  public Device deviceType(NestedDeviceType deviceType) {
    this.deviceType = deviceType;
    return this;
  }

  

  /**
  * Get deviceType
  * @return deviceType
  **/
  @Schema(required = true, description = "")
  public NestedDeviceType getDeviceType() {
    return deviceType;
  }
  public void setDeviceType(NestedDeviceType deviceType) {
    this.deviceType = deviceType;
  }
  public Device deviceRole(NestedDeviceRole deviceRole) {
    this.deviceRole = deviceRole;
    return this;
  }

  

  /**
  * Get deviceRole
  * @return deviceRole
  **/
  @Schema(required = true, description = "")
  public NestedDeviceRole getDeviceRole() {
    return deviceRole;
  }
  public void setDeviceRole(NestedDeviceRole deviceRole) {
    this.deviceRole = deviceRole;
  }
  public Device tenant(NestedTenant tenant) {
    this.tenant = tenant;
    return this;
  }

  

  /**
  * Get tenant
  * @return tenant
  **/
  @Schema(description = "")
  public NestedTenant getTenant() {
    return tenant;
  }
  public void setTenant(NestedTenant tenant) {
    this.tenant = tenant;
  }
  public Device platform(NestedPlatform platform) {
    this.platform = platform;
    return this;
  }

  

  /**
  * Get platform
  * @return platform
  **/
  @Schema(description = "")
  public NestedPlatform getPlatform() {
    return platform;
  }
  public void setPlatform(NestedPlatform platform) {
    this.platform = platform;
  }
  public Device serial(String serial) {
    this.serial = serial;
    return this;
  }

  

  /**
  * Get serial
  * @return serial
  **/
  @Schema(description = "")
  public String getSerial() {
    return serial;
  }
  public void setSerial(String serial) {
    this.serial = serial;
  }
  public Device assetTag(String assetTag) {
    this.assetTag = assetTag;
    return this;
  }

  

  /**
  * A unique tag used to identify this device
  * @return assetTag
  **/
  @Schema(description = "A unique tag used to identify this device")
  public String getAssetTag() {
    return assetTag;
  }
  public void setAssetTag(String assetTag) {
    this.assetTag = assetTag;
  }
  public Device site(NestedSite site) {
    this.site = site;
    return this;
  }

  

  /**
  * Get site
  * @return site
  **/
  @Schema(required = true, description = "")
  public NestedSite getSite() {
    return site;
  }
  public void setSite(NestedSite site) {
    this.site = site;
  }
  public Device rack(NestedRack rack) {
    this.rack = rack;
    return this;
  }

  

  /**
  * Get rack
  * @return rack
  **/
  @Schema(description = "")
  public NestedRack getRack() {
    return rack;
  }
  public void setRack(NestedRack rack) {
    this.rack = rack;
  }
  public Device position(Integer position) {
    this.position = position;
    return this;
  }

  

  /**
  * The lowest-numbered unit occupied by the device
  * minimum: 1
  * maximum: 32767
  * @return position
  **/
  @Schema(description = "The lowest-numbered unit occupied by the device")
  public Integer getPosition() {
    return position;
  }
  public void setPosition(Integer position) {
    this.position = position;
  }
  public Device face(Object face) {
    this.face = face;
    return this;
  }

  

  /**
  * Get face
  * @return face
  **/
  @Schema(description = "")
  public Object getFace() {
    return face;
  }
  public void setFace(Object face) {
    this.face = face;
  }
  /**
  * Get parentDevice
  * @return parentDevice
  **/
  @Schema(description = "")
  public String getParentDevice() {
    return parentDevice;
  }
  public Device status(Object status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public Object getStatus() {
    return status;
  }
  public void setStatus(Object status) {
    this.status = status;
  }
  public Device primaryIp(NestedIPAddress primaryIp) {
    this.primaryIp = primaryIp;
    return this;
  }

  

  /**
  * Get primaryIp
  * @return primaryIp
  **/
  @Schema(description = "")
  public NestedIPAddress getPrimaryIp() {
    return primaryIp;
  }
  public void setPrimaryIp(NestedIPAddress primaryIp) {
    this.primaryIp = primaryIp;
  }
  public Device primaryIp4(NestedIPAddress primaryIp4) {
    this.primaryIp4 = primaryIp4;
    return this;
  }

  

  /**
  * Get primaryIp4
  * @return primaryIp4
  **/
  @Schema(description = "")
  public NestedIPAddress getPrimaryIp4() {
    return primaryIp4;
  }
  public void setPrimaryIp4(NestedIPAddress primaryIp4) {
    this.primaryIp4 = primaryIp4;
  }
  public Device primaryIp6(NestedIPAddress primaryIp6) {
    this.primaryIp6 = primaryIp6;
    return this;
  }

  

  /**
  * Get primaryIp6
  * @return primaryIp6
  **/
  @Schema(description = "")
  public NestedIPAddress getPrimaryIp6() {
    return primaryIp6;
  }
  public void setPrimaryIp6(NestedIPAddress primaryIp6) {
    this.primaryIp6 = primaryIp6;
  }
  public Device cluster(NestedCluster cluster) {
    this.cluster = cluster;
    return this;
  }

  

  /**
  * Get cluster
  * @return cluster
  **/
  @Schema(description = "")
  public NestedCluster getCluster() {
    return cluster;
  }
  public void setCluster(NestedCluster cluster) {
    this.cluster = cluster;
  }
  public Device virtualChassis(NestedVirtualChassis virtualChassis) {
    this.virtualChassis = virtualChassis;
    return this;
  }

  

  /**
  * Get virtualChassis
  * @return virtualChassis
  **/
  @Schema(description = "")
  public NestedVirtualChassis getVirtualChassis() {
    return virtualChassis;
  }
  public void setVirtualChassis(NestedVirtualChassis virtualChassis) {
    this.virtualChassis = virtualChassis;
  }
  public Device vcPosition(Integer vcPosition) {
    this.vcPosition = vcPosition;
    return this;
  }

  

  /**
  * Get vcPosition
  * minimum: 0
  * maximum: 255
  * @return vcPosition
  **/
  @Schema(description = "")
  public Integer getVcPosition() {
    return vcPosition;
  }
  public void setVcPosition(Integer vcPosition) {
    this.vcPosition = vcPosition;
  }
  public Device vcPriority(Integer vcPriority) {
    this.vcPriority = vcPriority;
    return this;
  }

  

  /**
  * Get vcPriority
  * minimum: 0
  * maximum: 255
  * @return vcPriority
  **/
  @Schema(description = "")
  public Integer getVcPriority() {
    return vcPriority;
  }
  public void setVcPriority(Integer vcPriority) {
    this.vcPriority = vcPriority;
  }
  public Device comments(String comments) {
    this.comments = comments;
    return this;
  }

  

  /**
  * Get comments
  * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }
  public void setComments(String comments) {
    this.comments = comments;
  }
  public Device localContextData(String localContextData) {
    this.localContextData = localContextData;
    return this;
  }

  

  /**
  * Get localContextData
  * @return localContextData
  **/
  @Schema(description = "")
  public String getLocalContextData() {
    return localContextData;
  }
  public void setLocalContextData(String localContextData) {
    this.localContextData = localContextData;
  }
  public Device tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Device addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  public Device customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  

  /**
  * Get customFields
  * @return customFields
  **/
  @Schema(description = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }
  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public LocalDate getCreated() {
    return created;
  }
  /**
  * Get lastUpdated
  * @return lastUpdated
  **/
  @Schema(description = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Device device = (Device) o;
    return Objects.equals(this.id, device.id) &&
        Objects.equals(this.name, device.name) &&
        Objects.equals(this.displayName, device.displayName) &&
        Objects.equals(this.deviceType, device.deviceType) &&
        Objects.equals(this.deviceRole, device.deviceRole) &&
        Objects.equals(this.tenant, device.tenant) &&
        Objects.equals(this.platform, device.platform) &&
        Objects.equals(this.serial, device.serial) &&
        Objects.equals(this.assetTag, device.assetTag) &&
        Objects.equals(this.site, device.site) &&
        Objects.equals(this.rack, device.rack) &&
        Objects.equals(this.position, device.position) &&
        Objects.equals(this.face, device.face) &&
        Objects.equals(this.parentDevice, device.parentDevice) &&
        Objects.equals(this.status, device.status) &&
        Objects.equals(this.primaryIp, device.primaryIp) &&
        Objects.equals(this.primaryIp4, device.primaryIp4) &&
        Objects.equals(this.primaryIp6, device.primaryIp6) &&
        Objects.equals(this.cluster, device.cluster) &&
        Objects.equals(this.virtualChassis, device.virtualChassis) &&
        Objects.equals(this.vcPosition, device.vcPosition) &&
        Objects.equals(this.vcPriority, device.vcPriority) &&
        Objects.equals(this.comments, device.comments) &&
        Objects.equals(this.localContextData, device.localContextData) &&
        Objects.equals(this.tags, device.tags) &&
        Objects.equals(this.customFields, device.customFields) &&
        Objects.equals(this.created, device.created) &&
        Objects.equals(this.lastUpdated, device.lastUpdated);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, displayName, deviceType, deviceRole, tenant, platform, serial, assetTag, site, rack, position, face, parentDevice, status, primaryIp, primaryIp4, primaryIp6, cluster, virtualChassis, vcPosition, vcPriority, comments, localContextData, tags, customFields, created, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Device {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    deviceRole: ").append(toIndentedString(deviceRole)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    assetTag: ").append(toIndentedString(assetTag)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    rack: ").append(toIndentedString(rack)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    face: ").append(toIndentedString(face)).append("\n");
    sb.append("    parentDevice: ").append(toIndentedString(parentDevice)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    primaryIp: ").append(toIndentedString(primaryIp)).append("\n");
    sb.append("    primaryIp4: ").append(toIndentedString(primaryIp4)).append("\n");
    sb.append("    primaryIp6: ").append(toIndentedString(primaryIp6)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    virtualChassis: ").append(toIndentedString(virtualChassis)).append("\n");
    sb.append("    vcPosition: ").append(toIndentedString(vcPosition)).append("\n");
    sb.append("    vcPriority: ").append(toIndentedString(vcPriority)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    localContextData: ").append(toIndentedString(localContextData)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
