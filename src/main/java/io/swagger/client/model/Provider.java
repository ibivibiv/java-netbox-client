/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * Provider
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class Provider {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("asn")
  private Integer asn = null;

  @SerializedName("account")
  private String account = null;

  @SerializedName("portal_url")
  private String portalUrl = null;

  @SerializedName("noc_contact")
  private String nocContact = null;

  @SerializedName("admin_contact")
  private String adminContact = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("custom_fields")
  private Object customFields = null;

  @SerializedName("created")
  private LocalDate created = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public Provider name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Provider slug(String slug) {
    this.slug = slug;
    return this;
  }

  

  /**
  * Get slug
  * @return slug
  **/
  @Schema(required = true, description = "")
  public String getSlug() {
    return slug;
  }
  public void setSlug(String slug) {
    this.slug = slug;
  }
  public Provider asn(Integer asn) {
    this.asn = asn;
    return this;
  }

  

  /**
  * Get asn
  * minimum: 1
  * maximum: 4294967295
  * @return asn
  **/
  @Schema(description = "")
  public Integer getAsn() {
    return asn;
  }
  public void setAsn(Integer asn) {
    this.asn = asn;
  }
  public Provider account(String account) {
    this.account = account;
    return this;
  }

  

  /**
  * Get account
  * @return account
  **/
  @Schema(description = "")
  public String getAccount() {
    return account;
  }
  public void setAccount(String account) {
    this.account = account;
  }
  public Provider portalUrl(String portalUrl) {
    this.portalUrl = portalUrl;
    return this;
  }

  

  /**
  * Get portalUrl
  * @return portalUrl
  **/
  @Schema(description = "")
  public String getPortalUrl() {
    return portalUrl;
  }
  public void setPortalUrl(String portalUrl) {
    this.portalUrl = portalUrl;
  }
  public Provider nocContact(String nocContact) {
    this.nocContact = nocContact;
    return this;
  }

  

  /**
  * Get nocContact
  * @return nocContact
  **/
  @Schema(description = "")
  public String getNocContact() {
    return nocContact;
  }
  public void setNocContact(String nocContact) {
    this.nocContact = nocContact;
  }
  public Provider adminContact(String adminContact) {
    this.adminContact = adminContact;
    return this;
  }

  

  /**
  * Get adminContact
  * @return adminContact
  **/
  @Schema(description = "")
  public String getAdminContact() {
    return adminContact;
  }
  public void setAdminContact(String adminContact) {
    this.adminContact = adminContact;
  }
  public Provider comments(String comments) {
    this.comments = comments;
    return this;
  }

  

  /**
  * Get comments
  * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }
  public void setComments(String comments) {
    this.comments = comments;
  }
  public Provider tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Provider addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  public Provider customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  

  /**
  * Get customFields
  * @return customFields
  **/
  @Schema(description = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }
  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public LocalDate getCreated() {
    return created;
  }
  /**
  * Get lastUpdated
  * @return lastUpdated
  **/
  @Schema(description = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Provider provider = (Provider) o;
    return Objects.equals(this.id, provider.id) &&
        Objects.equals(this.name, provider.name) &&
        Objects.equals(this.slug, provider.slug) &&
        Objects.equals(this.asn, provider.asn) &&
        Objects.equals(this.account, provider.account) &&
        Objects.equals(this.portalUrl, provider.portalUrl) &&
        Objects.equals(this.nocContact, provider.nocContact) &&
        Objects.equals(this.adminContact, provider.adminContact) &&
        Objects.equals(this.comments, provider.comments) &&
        Objects.equals(this.tags, provider.tags) &&
        Objects.equals(this.customFields, provider.customFields) &&
        Objects.equals(this.created, provider.created) &&
        Objects.equals(this.lastUpdated, provider.lastUpdated);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, slug, asn, account, portalUrl, nocContact, adminContact, comments, tags, customFields, created, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Provider {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    asn: ").append(toIndentedString(asn)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    portalUrl: ").append(toIndentedString(portalUrl)).append("\n");
    sb.append("    nocContact: ").append(toIndentedString(nocContact)).append("\n");
    sb.append("    adminContact: ").append(toIndentedString(adminContact)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
