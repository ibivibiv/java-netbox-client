/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NestedRackGroup;
import io.swagger.client.model.NestedRackRole;
import io.swagger.client.model.NestedSite;
import io.swagger.client.model.NestedTenant;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * Rack
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class Rack {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("facility_id")
  private String facilityId = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("site")
  private NestedSite site = null;

  @SerializedName("group")
  private NestedRackGroup group = null;

  @SerializedName("tenant")
  private NestedTenant tenant = null;

  @SerializedName("status")
  private Object status = null;

  @SerializedName("role")
  private NestedRackRole role = null;

  @SerializedName("serial")
  private String serial = null;

  @SerializedName("asset_tag")
  private String assetTag = null;

  @SerializedName("type")
  private Object type = null;

  @SerializedName("width")
  private Object width = null;

  @SerializedName("u_height")
  private Integer uHeight = null;

  @SerializedName("desc_units")
  private Boolean descUnits = null;

  @SerializedName("outer_width")
  private Integer outerWidth = null;

  @SerializedName("outer_depth")
  private Integer outerDepth = null;

  @SerializedName("outer_unit")
  private Object outerUnit = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("custom_fields")
  private Object customFields = null;

  @SerializedName("created")
  private LocalDate created = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public Rack name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Rack facilityId(String facilityId) {
    this.facilityId = facilityId;
    return this;
  }

  

  /**
  * Get facilityId
  * @return facilityId
  **/
  @Schema(description = "")
  public String getFacilityId() {
    return facilityId;
  }
  public void setFacilityId(String facilityId) {
    this.facilityId = facilityId;
  }
  /**
  * Get displayName
  * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }
  public Rack site(NestedSite site) {
    this.site = site;
    return this;
  }

  

  /**
  * Get site
  * @return site
  **/
  @Schema(required = true, description = "")
  public NestedSite getSite() {
    return site;
  }
  public void setSite(NestedSite site) {
    this.site = site;
  }
  public Rack group(NestedRackGroup group) {
    this.group = group;
    return this;
  }

  

  /**
  * Get group
  * @return group
  **/
  @Schema(description = "")
  public NestedRackGroup getGroup() {
    return group;
  }
  public void setGroup(NestedRackGroup group) {
    this.group = group;
  }
  public Rack tenant(NestedTenant tenant) {
    this.tenant = tenant;
    return this;
  }

  

  /**
  * Get tenant
  * @return tenant
  **/
  @Schema(description = "")
  public NestedTenant getTenant() {
    return tenant;
  }
  public void setTenant(NestedTenant tenant) {
    this.tenant = tenant;
  }
  public Rack status(Object status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public Object getStatus() {
    return status;
  }
  public void setStatus(Object status) {
    this.status = status;
  }
  public Rack role(NestedRackRole role) {
    this.role = role;
    return this;
  }

  

  /**
  * Get role
  * @return role
  **/
  @Schema(description = "")
  public NestedRackRole getRole() {
    return role;
  }
  public void setRole(NestedRackRole role) {
    this.role = role;
  }
  public Rack serial(String serial) {
    this.serial = serial;
    return this;
  }

  

  /**
  * Get serial
  * @return serial
  **/
  @Schema(description = "")
  public String getSerial() {
    return serial;
  }
  public void setSerial(String serial) {
    this.serial = serial;
  }
  public Rack assetTag(String assetTag) {
    this.assetTag = assetTag;
    return this;
  }

  

  /**
  * A unique tag used to identify this rack
  * @return assetTag
  **/
  @Schema(description = "A unique tag used to identify this rack")
  public String getAssetTag() {
    return assetTag;
  }
  public void setAssetTag(String assetTag) {
    this.assetTag = assetTag;
  }
  public Rack type(Object type) {
    this.type = type;
    return this;
  }

  

  /**
  * Get type
  * @return type
  **/
  @Schema(description = "")
  public Object getType() {
    return type;
  }
  public void setType(Object type) {
    this.type = type;
  }
  public Rack width(Object width) {
    this.width = width;
    return this;
  }

  

  /**
  * Get width
  * @return width
  **/
  @Schema(description = "")
  public Object getWidth() {
    return width;
  }
  public void setWidth(Object width) {
    this.width = width;
  }
  public Rack uHeight(Integer uHeight) {
    this.uHeight = uHeight;
    return this;
  }

  

  /**
  * Get uHeight
  * minimum: 1
  * maximum: 100
  * @return uHeight
  **/
  @Schema(description = "")
  public Integer getUHeight() {
    return uHeight;
  }
  public void setUHeight(Integer uHeight) {
    this.uHeight = uHeight;
  }
  public Rack descUnits(Boolean descUnits) {
    this.descUnits = descUnits;
    return this;
  }

  

  /**
  * Units are numbered top-to-bottom
  * @return descUnits
  **/
  @Schema(description = "Units are numbered top-to-bottom")
  public Boolean isDescUnits() {
    return descUnits;
  }
  public void setDescUnits(Boolean descUnits) {
    this.descUnits = descUnits;
  }
  public Rack outerWidth(Integer outerWidth) {
    this.outerWidth = outerWidth;
    return this;
  }

  

  /**
  * Get outerWidth
  * minimum: 0
  * maximum: 32767
  * @return outerWidth
  **/
  @Schema(description = "")
  public Integer getOuterWidth() {
    return outerWidth;
  }
  public void setOuterWidth(Integer outerWidth) {
    this.outerWidth = outerWidth;
  }
  public Rack outerDepth(Integer outerDepth) {
    this.outerDepth = outerDepth;
    return this;
  }

  

  /**
  * Get outerDepth
  * minimum: 0
  * maximum: 32767
  * @return outerDepth
  **/
  @Schema(description = "")
  public Integer getOuterDepth() {
    return outerDepth;
  }
  public void setOuterDepth(Integer outerDepth) {
    this.outerDepth = outerDepth;
  }
  public Rack outerUnit(Object outerUnit) {
    this.outerUnit = outerUnit;
    return this;
  }

  

  /**
  * Get outerUnit
  * @return outerUnit
  **/
  @Schema(description = "")
  public Object getOuterUnit() {
    return outerUnit;
  }
  public void setOuterUnit(Object outerUnit) {
    this.outerUnit = outerUnit;
  }
  public Rack comments(String comments) {
    this.comments = comments;
    return this;
  }

  

  /**
  * Get comments
  * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }
  public void setComments(String comments) {
    this.comments = comments;
  }
  public Rack tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Rack addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  public Rack customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  

  /**
  * Get customFields
  * @return customFields
  **/
  @Schema(description = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }
  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public LocalDate getCreated() {
    return created;
  }
  /**
  * Get lastUpdated
  * @return lastUpdated
  **/
  @Schema(description = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rack rack = (Rack) o;
    return Objects.equals(this.id, rack.id) &&
        Objects.equals(this.name, rack.name) &&
        Objects.equals(this.facilityId, rack.facilityId) &&
        Objects.equals(this.displayName, rack.displayName) &&
        Objects.equals(this.site, rack.site) &&
        Objects.equals(this.group, rack.group) &&
        Objects.equals(this.tenant, rack.tenant) &&
        Objects.equals(this.status, rack.status) &&
        Objects.equals(this.role, rack.role) &&
        Objects.equals(this.serial, rack.serial) &&
        Objects.equals(this.assetTag, rack.assetTag) &&
        Objects.equals(this.type, rack.type) &&
        Objects.equals(this.width, rack.width) &&
        Objects.equals(this.uHeight, rack.uHeight) &&
        Objects.equals(this.descUnits, rack.descUnits) &&
        Objects.equals(this.outerWidth, rack.outerWidth) &&
        Objects.equals(this.outerDepth, rack.outerDepth) &&
        Objects.equals(this.outerUnit, rack.outerUnit) &&
        Objects.equals(this.comments, rack.comments) &&
        Objects.equals(this.tags, rack.tags) &&
        Objects.equals(this.customFields, rack.customFields) &&
        Objects.equals(this.created, rack.created) &&
        Objects.equals(this.lastUpdated, rack.lastUpdated);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, facilityId, displayName, site, group, tenant, status, role, serial, assetTag, type, width, uHeight, descUnits, outerWidth, outerDepth, outerUnit, comments, tags, customFields, created, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rack {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    facilityId: ").append(toIndentedString(facilityId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    assetTag: ").append(toIndentedString(assetTag)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    uHeight: ").append(toIndentedString(uHeight)).append("\n");
    sb.append("    descUnits: ").append(toIndentedString(descUnits)).append("\n");
    sb.append("    outerWidth: ").append(toIndentedString(outerWidth)).append("\n");
    sb.append("    outerDepth: ").append(toIndentedString(outerDepth)).append("\n");
    sb.append("    outerUnit: ").append(toIndentedString(outerUnit)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
