/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NestedCable;
import io.swagger.client.model.NestedDevice;
import io.swagger.client.model.NestedInterface;
import io.swagger.client.model.NestedVLAN;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ModelInterface
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class ModelInterface {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("device")
  private NestedDevice device = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("form_factor")
  private Object formFactor = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("lag")
  private NestedInterface lag = null;

  @SerializedName("mtu")
  private Integer mtu = null;

  @SerializedName("mac_address")
  private String macAddress = null;

  @SerializedName("mgmt_only")
  private Boolean mgmtOnly = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("connected_endpoint_type")
  private String connectedEndpointType = null;

  @SerializedName("connected_endpoint")
  private String connectedEndpoint = null;

  @SerializedName("connection_status")
  private Object connectionStatus = null;

  @SerializedName("cable")
  private NestedCable cable = null;

  @SerializedName("mode")
  private Object mode = null;

  @SerializedName("untagged_vlan")
  private NestedVLAN untaggedVlan = null;

  @SerializedName("tagged_vlans")
  private List<NestedVLAN> taggedVlans = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("count_ipaddresses")
  private String countIpaddresses = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public ModelInterface device(NestedDevice device) {
    this.device = device;
    return this;
  }

  

  /**
  * Get device
  * @return device
  **/
  @Schema(required = true, description = "")
  public NestedDevice getDevice() {
    return device;
  }
  public void setDevice(NestedDevice device) {
    this.device = device;
  }
  public ModelInterface name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ModelInterface formFactor(Object formFactor) {
    this.formFactor = formFactor;
    return this;
  }

  

  /**
  * Get formFactor
  * @return formFactor
  **/
  @Schema(description = "")
  public Object getFormFactor() {
    return formFactor;
  }
  public void setFormFactor(Object formFactor) {
    this.formFactor = formFactor;
  }
  public ModelInterface enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  

  /**
  * Get enabled
  * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }
  public ModelInterface lag(NestedInterface lag) {
    this.lag = lag;
    return this;
  }

  

  /**
  * Get lag
  * @return lag
  **/
  @Schema(description = "")
  public NestedInterface getLag() {
    return lag;
  }
  public void setLag(NestedInterface lag) {
    this.lag = lag;
  }
  public ModelInterface mtu(Integer mtu) {
    this.mtu = mtu;
    return this;
  }

  

  /**
  * Get mtu
  * minimum: 1
  * maximum: 65536
  * @return mtu
  **/
  @Schema(description = "")
  public Integer getMtu() {
    return mtu;
  }
  public void setMtu(Integer mtu) {
    this.mtu = mtu;
  }
  public ModelInterface macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

  

  /**
  * Get macAddress
  * @return macAddress
  **/
  @Schema(description = "")
  public String getMacAddress() {
    return macAddress;
  }
  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }
  public ModelInterface mgmtOnly(Boolean mgmtOnly) {
    this.mgmtOnly = mgmtOnly;
    return this;
  }

  

  /**
  * This interface is used only for out-of-band management
  * @return mgmtOnly
  **/
  @Schema(description = "This interface is used only for out-of-band management")
  public Boolean isMgmtOnly() {
    return mgmtOnly;
  }
  public void setMgmtOnly(Boolean mgmtOnly) {
    this.mgmtOnly = mgmtOnly;
  }
  public ModelInterface description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  /**
  * Get connectedEndpointType
  * @return connectedEndpointType
  **/
  @Schema(description = "")
  public String getConnectedEndpointType() {
    return connectedEndpointType;
  }
  /**
  * Get connectedEndpoint
  * @return connectedEndpoint
  **/
  @Schema(description = "")
  public String getConnectedEndpoint() {
    return connectedEndpoint;
  }
  /**
  * Get connectionStatus
  * @return connectionStatus
  **/
  @Schema(description = "")
  public Object getConnectionStatus() {
    return connectionStatus;
  }
  public ModelInterface cable(NestedCable cable) {
    this.cable = cable;
    return this;
  }

  

  /**
  * Get cable
  * @return cable
  **/
  @Schema(description = "")
  public NestedCable getCable() {
    return cable;
  }
  public void setCable(NestedCable cable) {
    this.cable = cable;
  }
  public ModelInterface mode(Object mode) {
    this.mode = mode;
    return this;
  }

  

  /**
  * Get mode
  * @return mode
  **/
  @Schema(description = "")
  public Object getMode() {
    return mode;
  }
  public void setMode(Object mode) {
    this.mode = mode;
  }
  public ModelInterface untaggedVlan(NestedVLAN untaggedVlan) {
    this.untaggedVlan = untaggedVlan;
    return this;
  }

  

  /**
  * Get untaggedVlan
  * @return untaggedVlan
  **/
  @Schema(description = "")
  public NestedVLAN getUntaggedVlan() {
    return untaggedVlan;
  }
  public void setUntaggedVlan(NestedVLAN untaggedVlan) {
    this.untaggedVlan = untaggedVlan;
  }
  public ModelInterface taggedVlans(List<NestedVLAN> taggedVlans) {
    this.taggedVlans = taggedVlans;
    return this;
  }

  public ModelInterface addTaggedVlansItem(NestedVLAN taggedVlansItem) {
    if (this.taggedVlans == null) {
      this.taggedVlans = new ArrayList<NestedVLAN>();
    }
    this.taggedVlans.add(taggedVlansItem);
    return this;
  }

  /**
  * Get taggedVlans
  * @return taggedVlans
  **/
  @Schema(description = "")
  public List<NestedVLAN> getTaggedVlans() {
    return taggedVlans;
  }
  public void setTaggedVlans(List<NestedVLAN> taggedVlans) {
    this.taggedVlans = taggedVlans;
  }
  public ModelInterface tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ModelInterface addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  /**
  * Get countIpaddresses
  * @return countIpaddresses
  **/
  @Schema(description = "")
  public String getCountIpaddresses() {
    return countIpaddresses;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelInterface _interface = (ModelInterface) o;
    return Objects.equals(this.id, _interface.id) &&
        Objects.equals(this.device, _interface.device) &&
        Objects.equals(this.name, _interface.name) &&
        Objects.equals(this.formFactor, _interface.formFactor) &&
        Objects.equals(this.enabled, _interface.enabled) &&
        Objects.equals(this.lag, _interface.lag) &&
        Objects.equals(this.mtu, _interface.mtu) &&
        Objects.equals(this.macAddress, _interface.macAddress) &&
        Objects.equals(this.mgmtOnly, _interface.mgmtOnly) &&
        Objects.equals(this.description, _interface.description) &&
        Objects.equals(this.connectedEndpointType, _interface.connectedEndpointType) &&
        Objects.equals(this.connectedEndpoint, _interface.connectedEndpoint) &&
        Objects.equals(this.connectionStatus, _interface.connectionStatus) &&
        Objects.equals(this.cable, _interface.cable) &&
        Objects.equals(this.mode, _interface.mode) &&
        Objects.equals(this.untaggedVlan, _interface.untaggedVlan) &&
        Objects.equals(this.taggedVlans, _interface.taggedVlans) &&
        Objects.equals(this.tags, _interface.tags) &&
        Objects.equals(this.countIpaddresses, _interface.countIpaddresses);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, device, name, formFactor, enabled, lag, mtu, macAddress, mgmtOnly, description, connectedEndpointType, connectedEndpoint, connectionStatus, cable, mode, untaggedVlan, taggedVlans, tags, countIpaddresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelInterface {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    formFactor: ").append(toIndentedString(formFactor)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    lag: ").append(toIndentedString(lag)).append("\n");
    sb.append("    mtu: ").append(toIndentedString(mtu)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    mgmtOnly: ").append(toIndentedString(mgmtOnly)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    connectedEndpointType: ").append(toIndentedString(connectedEndpointType)).append("\n");
    sb.append("    connectedEndpoint: ").append(toIndentedString(connectedEndpoint)).append("\n");
    sb.append("    connectionStatus: ").append(toIndentedString(connectionStatus)).append("\n");
    sb.append("    cable: ").append(toIndentedString(cable)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    untaggedVlan: ").append(toIndentedString(untaggedVlan)).append("\n");
    sb.append("    taggedVlans: ").append(toIndentedString(taggedVlans)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    countIpaddresses: ").append(toIndentedString(countIpaddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
