/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * WritableVRF
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class WritableVRF {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("rd")
  private String rd = null;

  @SerializedName("tenant")
  private Integer tenant = null;

  @SerializedName("enforce_unique")
  private Boolean enforceUnique = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("custom_fields")
  private Object customFields = null;

  @SerializedName("created")
  private LocalDate created = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public WritableVRF name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public WritableVRF rd(String rd) {
    this.rd = rd;
    return this;
  }

  

  /**
  * Get rd
  * @return rd
  **/
  @Schema(required = true, description = "")
  public String getRd() {
    return rd;
  }
  public void setRd(String rd) {
    this.rd = rd;
  }
  public WritableVRF tenant(Integer tenant) {
    this.tenant = tenant;
    return this;
  }

  

  /**
  * Get tenant
  * @return tenant
  **/
  @Schema(description = "")
  public Integer getTenant() {
    return tenant;
  }
  public void setTenant(Integer tenant) {
    this.tenant = tenant;
  }
  public WritableVRF enforceUnique(Boolean enforceUnique) {
    this.enforceUnique = enforceUnique;
    return this;
  }

  

  /**
  * Prevent duplicate prefixes/IP addresses within this VRF
  * @return enforceUnique
  **/
  @Schema(description = "Prevent duplicate prefixes/IP addresses within this VRF")
  public Boolean isEnforceUnique() {
    return enforceUnique;
  }
  public void setEnforceUnique(Boolean enforceUnique) {
    this.enforceUnique = enforceUnique;
  }
  public WritableVRF description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public WritableVRF tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public WritableVRF addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  /**
  * Get displayName
  * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }
  public WritableVRF customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  

  /**
  * Get customFields
  * @return customFields
  **/
  @Schema(description = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }
  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public LocalDate getCreated() {
    return created;
  }
  /**
  * Get lastUpdated
  * @return lastUpdated
  **/
  @Schema(description = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritableVRF writableVRF = (WritableVRF) o;
    return Objects.equals(this.id, writableVRF.id) &&
        Objects.equals(this.name, writableVRF.name) &&
        Objects.equals(this.rd, writableVRF.rd) &&
        Objects.equals(this.tenant, writableVRF.tenant) &&
        Objects.equals(this.enforceUnique, writableVRF.enforceUnique) &&
        Objects.equals(this.description, writableVRF.description) &&
        Objects.equals(this.tags, writableVRF.tags) &&
        Objects.equals(this.displayName, writableVRF.displayName) &&
        Objects.equals(this.customFields, writableVRF.customFields) &&
        Objects.equals(this.created, writableVRF.created) &&
        Objects.equals(this.lastUpdated, writableVRF.lastUpdated);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, rd, tenant, enforceUnique, description, tags, displayName, customFields, created, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritableVRF {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rd: ").append(toIndentedString(rd)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    enforceUnique: ").append(toIndentedString(enforceUnique)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
