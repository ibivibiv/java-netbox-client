/*
 * NetBox API
 * API to access NetBox
 *
 * OpenAPI spec version: 2.5
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NestedSite;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * TopologyMap
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-11T16:11:54.626-06:00[America/Chicago]")public class TopologyMap {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("site")
  private NestedSite site = null;

  @SerializedName("device_patterns")
  private String devicePatterns = null;

  @SerializedName("description")
  private String description = null;
  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public TopologyMap name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public TopologyMap slug(String slug) {
    this.slug = slug;
    return this;
  }

  

  /**
  * Get slug
  * @return slug
  **/
  @Schema(required = true, description = "")
  public String getSlug() {
    return slug;
  }
  public void setSlug(String slug) {
    this.slug = slug;
  }
  public TopologyMap site(NestedSite site) {
    this.site = site;
    return this;
  }

  

  /**
  * Get site
  * @return site
  **/
  @Schema(required = true, description = "")
  public NestedSite getSite() {
    return site;
  }
  public void setSite(NestedSite site) {
    this.site = site;
  }
  public TopologyMap devicePatterns(String devicePatterns) {
    this.devicePatterns = devicePatterns;
    return this;
  }

  

  /**
  * Identify devices to include in the diagram using regular expressions, one per line. Each line will result in a new tier of the drawing. Separate multiple regexes within a line using semicolons. Devices will be rendered in the order they are defined.
  * @return devicePatterns
  **/
  @Schema(required = true, description = "Identify devices to include in the diagram using regular expressions, one per line. Each line will result in a new tier of the drawing. Separate multiple regexes within a line using semicolons. Devices will be rendered in the order they are defined.")
  public String getDevicePatterns() {
    return devicePatterns;
  }
  public void setDevicePatterns(String devicePatterns) {
    this.devicePatterns = devicePatterns;
  }
  public TopologyMap description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopologyMap topologyMap = (TopologyMap) o;
    return Objects.equals(this.id, topologyMap.id) &&
        Objects.equals(this.name, topologyMap.name) &&
        Objects.equals(this.slug, topologyMap.slug) &&
        Objects.equals(this.site, topologyMap.site) &&
        Objects.equals(this.devicePatterns, topologyMap.devicePatterns) &&
        Objects.equals(this.description, topologyMap.description);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, slug, site, devicePatterns, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopologyMap {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    devicePatterns: ").append(toIndentedString(devicePatterns)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
